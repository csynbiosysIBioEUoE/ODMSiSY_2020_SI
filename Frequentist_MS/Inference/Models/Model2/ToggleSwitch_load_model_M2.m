function [model] = ToggleSwitch_load_model_M2()

% This script contains one the intermediate model structure that we propose for the Toggle Switch
% Amongst the models being considered for model selection, this is Model
% M2.

% model.AMIGOjac = 0;                                                         % Compute Jacobian 0 = No, 1 = yes
model.input_model_type='charmodelC';                                        % Model introduction: 'charmodelC'|'c_model'|'charmodelM'|'matlabmodel'|'sbmlmodel'|'blackboxmodel'|'blackboxcost                             
model.n_st=4;                                                               % Number of states      
model.n_par=14;                                                             % Number of model parameters 
model.n_stimulus=2;                                                         % Number of inputs, stimuli or control variables   
model.stimulus_names=char('u_IPTG','u_aTc');                                % Name of stimuli or control variables
model.st_names=char('IPTGi','aTci','L_RFP','T_GFP');      % Names of the states                                              
model.par_names=char('k_iptg',...
                     'k_aTc',...
                     'kL_p_m0','kL_p_m','theta_T','theta_aTc','n_aTc','n_T',...
                     'kT_p_m0','kT_p_m','theta_L','theta_IPTG','n_IPTG','n_L');  % Names of the parameters    
                 
model.eqns=...                                                              % Equations describing system dynamics. Time derivatives are regarded 'd'st_name''
               char('dIPTGi = k_iptg*(u_IPTG-IPTGi)',...
                    'daTci = k_aTc*(u_aTc-aTci)',...
                    'dL_RFP = 1/0.1386*(kL_p_m0 + (kL_p_m/(1+(T_GFP/theta_T*(1/(1+(aTci/theta_aTc)^n_aTc)))^n_T)))-0.0165*L_RFP',...
                    'dT_GFP = 1/0.1386*(kT_p_m0 + (kT_p_m/(1+(L_RFP/theta_L*(1/(1+(IPTGi/theta_IPTG)^n_IPTG)))^n_L)))-0.0165*T_GFP');
                    

%==================
% PARAMETER VALUES
% =================
% Mean from Bayesian posterior distributions
% model.par=[0.444212483187965, ...
%            0.027507630218142,...
%            0.060205622816299, 6.331076666105940, 74.120929753486465, 0.933380711654011, 0.420700899689228, 3.243458043876683,...
%            0.274560257581583, 4.472975069703900, 2.689126088122326, 0.019113989493838, 0.826869123851192, 0.711352718995063];
       
% % Mean from PE in AMIGO llk
% model.par=[0.448799999995843, ...
%            0.029456634311386,...
%            0.336599999999903, 6.838719298953380, 24.107782667775844, 0.891300000003698, 0.652057971972699, 2.881934622793840,...
%            0.129955355566597, 11.220199999989719, 15.335923188474785, 0.008900000000435, 0.306411649382442, 1.855092021804624];       
       

% Mean from PE in AMIGO lsq
model.par=[0.003600008114440, ...
           0.016657614658055,...
           0.336599324413514, 5.364648145121066, 2.674079067187568, 6.910811385298283, 5.124953393701952, 5.124986969366007,...
           0.516957951192676, 11.220155449727615, 26.456963129944729, 0.940227236021740, 5.124952648079215, 1.142276843787736];       
  
% % Mean from PE in AMIGO lsq (No crossvalidation)
% model.par=[0.448799810251304, ...
%            0.008900000160131,...
%            0.336599996015699, 5.655259395307942, 29.687137905528218, 0.891300063428230, 0.927835788267603, 5.124999736624210,...
%            0.519416983899255, 11.220199620279647, 17.601363276215356, 0.008900146609042, 0.058044279170284, 1.448196210447410];   


end                                 